716bd4bbb2985e632f5710362a548d90
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
var _exportNames = {
  render: true
};
exports.render = void 0;

var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));

var _react = require("@testing-library/react");

Object.keys(_react).forEach(function (key) {
  if (key === "default" || key === "__esModule") return;
  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
  if (key in exports && exports[key] === _react[key]) return;
  Object.defineProperty(exports, key, {
    enumerable: true,
    get: function () {
      return _react[key];
    }
  });
});

function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }

function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }

// Add in any providers here if necessary:
const Providers = ({
  children
}) => {
  return children;
};

const customRender = (ui, options = {}) => (0, _react.render)(ui, _objectSpread({
  wrapper: Providers
}, options)); // re-export everything


exports.render = customRender;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJQcm92aWRlcnMiLCJjaGlsZHJlbiIsImN1c3RvbVJlbmRlciIsInVpIiwib3B0aW9ucyIsInJlbmRlciIsIndyYXBwZXIiXSwic291cmNlcyI6WyJ0ZXN0LnV0aWxzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHJlbmRlciB9IGZyb20gXCJAdGVzdGluZy1saWJyYXJ5L3JlYWN0XCI7XHJcblxyXG4vLyBBZGQgaW4gYW55IHByb3ZpZGVycyBoZXJlIGlmIG5lY2Vzc2FyeTpcclxuY29uc3QgUHJvdmlkZXJzID0gKHsgY2hpbGRyZW4gfSkgPT4ge1xyXG4gIHJldHVybiBjaGlsZHJlbjtcclxufTtcclxuXHJcbmNvbnN0IGN1c3RvbVJlbmRlciA9ICh1aSwgb3B0aW9ucyA9IHt9KSA9PlxyXG4gIHJlbmRlcih1aSwgeyB3cmFwcGVyOiBQcm92aWRlcnMsIC4uLm9wdGlvbnMgfSk7XHJcblxyXG4vLyByZS1leHBvcnQgZXZlcnl0aGluZ1xyXG5leHBvcnQgKiBmcm9tIFwiQHRlc3RpbmctbGlicmFyeS9yZWFjdFwiO1xyXG5cclxuLy8gb3ZlcnJpZGUgcmVuZGVyIG1ldGhvZFxyXG5leHBvcnQgeyBjdXN0b21SZW5kZXIgYXMgcmVuZGVyIH07Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBOztBQVdBO0VBQUE7RUFBQTtFQUFBO0VBQUE7SUFBQTtJQUFBO01BQUE7SUFBQTtFQUFBO0FBQUE7Ozs7OztBQVRBO0FBQ0EsTUFBTUEsU0FBUyxHQUFHLENBQUM7RUFBRUM7QUFBRixDQUFELEtBQWtCO0VBQ2xDLE9BQU9BLFFBQVA7QUFDRCxDQUZEOztBQUlBLE1BQU1DLFlBQVksR0FBRyxDQUFDQyxFQUFELEVBQUtDLE9BQU8sR0FBRyxFQUFmLEtBQ25CLElBQUFDLGFBQUEsRUFBT0YsRUFBUDtFQUFhRyxPQUFPLEVBQUVOO0FBQXRCLEdBQW9DSSxPQUFwQyxFQURGLEMsQ0FHQSJ9